// PRIORIDAD EN FUNCIÓN DEL ORDEN DE LAS REGLAS (LA SUPERIOR LA MÁS PRIORITARIA)
rule fin {  
  declarations
    inferencia.examples.E5_Partida P;    
    inferencia.examples.E5_jugador J;
  preconditions
    P.finJuego();	
    J.getColor().equals(P.getGanador());	
  actions
 	P.setTurno("FIN");
    modified(P);	// Indica que ha cambiado y por tanto se puede volver a utilizar para otra regla
}

rule copiar {  
  declarations
    inferencia.examples.E5_Partida P;
    inferencia.examples.E5_posicion pos1;
    inferencia.examples.E5_posicion pos2;
    inferencia.examples.E5_jugador J;   
  preconditions
    P.getTurno().equals(J.getColor());	
    J.getColor().equals(P.getGridValue(pos1));	
    P.isAdyacentes(pos1, pos2)==1;
    P.getGridValue(pos2).equals("Vacio");
  actions
  	P.setGridValue(pos2,J.getColor());
 	P.setTurno(J.getEnemigo());
 	P.ganador();
    modified(P);	// Indica que ha cambiado y por tanto se puede volver a utilizar para otra regla
}

rule mover {  
  declarations
    inferencia.examples.E5_Partida P;
    inferencia.examples.E5_posicion pos1;
    inferencia.examples.E5_posicion pos2;
    inferencia.examples.E5_jugador J;    
  preconditions
    P.getTurno().equals(J.getColor());	
    J.getColor().equals(P.getGridValue(pos1));	
    P.isAdyacentes(pos1, pos2)==2;
    P.getGridValue(pos2).equals("Vacio");
  actions
  	P.setGridValue(pos2,J.getColor());
  	P.setGridValue(pos1,"Vacio");
 	P.setTurno(J.getEnemigo());
 	P.ganador();
    modified(P);	// Indica que ha cambiado y por tanto se puede volver a utilizar para otra regla
}





